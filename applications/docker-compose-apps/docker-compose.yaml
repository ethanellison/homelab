# version: '3.8'

include:
  - ./automation/compose.yaml
  - ./budget/compose.yaml
services:
  tsdproxy:
    image: almeidapaulopt/tsdproxy:2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - datadir:/data
      - /etc/tsdproxy/config:/config
    restart: unless-stopped
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    privileged: true
    # network_mode: host
    ports:
      - 8123:8123
    volumes:
      - /opt/homeassistant/config:/config # TODO migrate from host storage to network volume 
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    environment:
      TZ: America/Toronto

  broker:
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - /opt/paperless/redis:/data

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.18.4
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 8100:8000
    volumes:
      - /opt/paperless/data:/usr/src/paperless/data
      - /opt/paperless/media:/usr/src/paperless/media
      - /opt/paperless/consume:/usr/src/paperless/consume
      - /opt/paperless/export:/usr/src/paperless/export
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # network_mode: host
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8888:80/tcp"
    environment:
      TZ: 'America/Toronto'
      FTLCONF_webserver_api_password: 'password'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
    volumes:
      - /opt/pihole/etc-pihole:/etc/pihole
      - /opt/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    restart: unless-stopped
    labels:
      - tsdproxy.enable=true
volumes:
  datadir:
    external: true
